name: Preview Testnet

on:
  pull_request:
    branches:
      - develop
      - release/*
    types: [ opened, synchronize, closed ]

env:
  PR_NUMBER: ${{ github.event.pull_request.number }}
  ENV: "stg"
  APP: "aescan-testnet"

concurrency: aescan_staging_environment-${{ github.ref }}

jobs:
  main:
    runs-on: ubuntu-latest
    name: build
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Set up Docker Buildx
        id: buildx
        # Use the action from the master, as we've seen some inconsistencies with @v1
        # Issue: https://github.com/docker/build-push-action/issues/286
        uses: docker/setup-buildx-action@master
        # Only worked for us with this option on
        with:
          install: true

      - name: Cache Docker layers
        uses: actions/cache@v4.0.2
        with:
          path: /tmp/.buildx-cache
          # Key is named differently to avoid collision
          key: ${{ runner.os }}-${{ env.ENV }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-${{ env.ENV }}-buildx

      - name: Log in to dockerhub
        uses: docker/login-action@v3.3.0
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASS }}

      - name: Extract metadata for docker
        if: github.event_name == 'pull_request' && github.event.action == 'opened' || github.event.action == 'synchronize'
        id: meta
        uses: docker/metadata-action@v5.5.1
        with:
          images: aeternity/aescan
          tags: |
            type=ref,event=pr

      - name: Get commit sha on PR Sync
        if: github.event_name == 'pull_request' && github.event.action == 'synchronize'
        id: git-sha
        shell: bash
        run: |
          echo GIT_SHA=$(git rev-parse --short HEAD) >> $GITHUB_OUTPUT

      - name: Create dotenv
        run: |
          echo APP_VERSION=$(git describe --tags)-preview >> .env

      - name: Build and push docker image
        if: github.event_name == 'pull_request' && github.event.action == 'opened' || github.event.action == 'synchronize'
        uses: docker/build-push-action@v6.9.0
        with:
          context: .
          file: Dockerfile
          push: true
          build-args: BUILD_MODE=development
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new

      - name: Move cache
        if: github.event_name == 'pull_request' && github.event.action == 'opened' || github.event.action == 'synchronize'
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - uses: actions/checkout@v3
        with:
          repository: aeternity/gitops-apps-aelabs.git
          ref: stg
          token: ${{ secrets.BOT_GITHUB_TOKEN }}
          persist-credentials: false
          fetch-depth: 0

      - name: Chekc the initial PR deployment status before make a PR Sync.
        if: github.event_name == 'pull_request' && github.event.action == 'synchronize'
        uses: aeternity/ae-github-actions/deploy-status@v7
        with:
          url: https://pr-${{ env.PR_NUMBER }}-${{ env.APP }}.${{ env.ENV }}.service.aepps.com

      - name: Staging PR Sync
        if: github.event_name == 'pull_request' && github.event.action == 'synchronize'
        uses: aeternity/ae-github-actions/argocd-pr-sync@v5
        with:
          git-sha: ${{ steps.git-sha.outputs.GIT_SHA }}
          url-prefix: pr-${{ env.PR_NUMBER }}
          env: ${{ env.ENV }}
          app: ${{ env.APP }}

      - name: Staging deploy
        if: github.event_name == 'pull_request' && github.event.action == 'opened'
        uses: aeternity/ae-github-actions/argocd-deploy@v5
        with:
          url-prefix: pr-${{ env.PR_NUMBER }}
          env: ${{ env.ENV }}
          app: ${{ env.APP }}

      - name: Staging undeploy
        if: github.event.action == 'closed' && startsWith(github.head_ref, 'release') != true
        uses: aeternity/ae-github-actions/argocd-undeploy@v5
        with:
          url-prefix: pr-${{ env.PR_NUMBER }}
          env: ${{ env.ENV }}
          app: ${{ env.APP }}

      - name: Print PR url
        uses: unsplash/comment-on-pr@v1.3.0
        if: github.event_name == 'pull_request' && github.event.action == 'opened'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          msg: |
            ## üß™Ô∏è Preview Links üîéÔ∏è
            Mainnet: https://pr-${{ env.PR_NUMBER }}-aescan.${{ env.ENV }}.service.aepps.com
            Testnet: https://pr-${{ env.PR_NUMBER }}-aescan-testnet.${{ env.ENV }}.service.aepps.com
          check_for_duplicate_msg: true

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          repository: aeternity/gitops-apps-aelabs
          github_token: ${{ secrets.BOT_GITHUB_TOKEN }}
          branch: stg

  end-to-end-tests:
    needs: main
    runs-on: ubuntu-22.04
    name: E2E Tests
    timeout-minutes: 20
    if: github.event.action == 'opened' || github.event.action == 'synchronize'
    steps:
      - name: Check the PR deployment status before run E2E tests.
        uses: aeternity/ae-github-actions/deploy-status@v7.1.0
        with:
          url: https://pr-${{ env.PR_NUMBER }}-${{ env.APP }}.${{ env.ENV }}.service.aepps.com
          timeout: 300
          interval: 5
      - name: Checkout
        uses: actions/checkout@v4
      - name: Cypress run
        uses: cypress-io/github-action@v6
        with:
          config: baseUrl=https://pr-${{ env.PR_NUMBER }}-${{ env.APP }}.${{ env.ENV }}.service.aepps.com
