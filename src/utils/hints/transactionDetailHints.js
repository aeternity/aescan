export const transactionDetailsHints = {
  keyblockHeight: 'Keyblock height when the transaction was mined.',
  keyblockConfirmations: 'Amount of keyblocks that was added since the transaction was produced.',
  status: 'Status of the transaction.',
  microblockHash: 'Microblock in which the transaction is included.',
  time: 'Exact date and time when the transaction was mined.',
  fee: 'Transaction fee for the transaction',
  nonce: 'Value of the nonce for the transaction. Nonce serves as a one-time authenticator for transactions.',
  apiLinks: 'Links to sources of the transaction data.',
  spendTxSender: 'Account that dispatched the transaction.',
  spendTxSenderRecipient: 'Account that the transaction is transferred to.',
  spendTxSenderAmount: 'Amount of AE that is being transferred.',
  spendTxSenderPayload: 'Additional message attached to transaction.',
  contractStatus: 'Status of the transaction',
  contractSmartContract: 'Unique identifier for a smart contract instance that lives on the blockchain.',
  contractCreator: 'Account that created the smart contract.',
  contractCaller: 'Account that called the smart contract.',
  contractAmount: 'Amount of AE coins that was transferred to smart contract address.',
  contractEntryPoint: 'The entry point of the smart contract that has been called.',
  contractArguments: 'Arguments that was passed to entry point call with the call.',
  contractReturn: 'Value that has been emitted after the call to entry point.',
  contractGasLimit: 'Maximum amount of gas that will be paid for transaction.',
  contractGasPrice: 'Price for one unit of gas.',
  contractGasUsed: 'Amount of gas that was paid for interaction with the smart contract.',
  contractGasCost: 'Price in AE that was paid for interaction with the smart contract.',
  oracle: 'Unique Oracle identifier inherited from the account address of the operator.',
  oracleTTL: 'Unique Oracle identifier inherited from the account address of the operator.',
}
