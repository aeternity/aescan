export const transactionsHints = {
  hash: 'Unique identifier of the transaction.',
  created: 'Estimated date, time, and block height when the transaction has been sent.',
  type: 'Type of the transaction depending on its purpose Aeternity ecosystem.',
  spendTx: 'Basic transaction to transfer tokens.',
  contractCallTx: 'Calls the existing contract.',
  contractCreateTx: 'Creates the contract.',
  oracleRegisterTx: 'Register an existing account as an oracle.',
  oracleQueryTx: 'Interacts with an oracle.',
  oracleRespondTx: 'The oracle operator responds to a query by posting an oracle response transaction.',
  oracleExtendTx: 'Oracle operator to extend the TTL of an existing oracle.',
  namePreclaimTx: 'Starts the Name claiming process.',
  nameClaimTx: 'Claims the name. Apart from standard transaction fee it locks additional fee in a restricted account.',
  nameUpdateTx: 'Extend the lease of the name.',
  nameTransferTx: 'Transfers the name ownership.',
  nameRevokeTx: 'Changes the name to the revoked state. After a fixed timeout of 2016 blocks, the name will be available for claiming again.',
  channelCreateTx: 'Registers a channel on-chain and its inclusion.',
  channelDepositTx: 'Deposits funds into a channel. Participant moves coins from the participant\'s balance to the channel\'s one.',
  channelWithdrawTx: 'Withdraws locked coins.',
  channelCloseMutualTx: 'Transaction of initiator and responder that agreed upon distribution of coins out of the channel.',
  channelCloseSoloTx: 'Closes the channel unilaterally. In the case of a solo closing, operations are subject to the lock_period.',
  channelSlashTx: 'Disputes closing channel.',
  channelSettleTx: 'The last transaction in the lifecycle of a channel, but only required if the parties involved did not manage to cooperate when trying to close the channel. It has to be issued after all possible disputes are resolved and then redistribute the locked coins.',
  channelSnapshotSoloTx: 'Provides a recent off-chain state to be recorded on-chain.',
  channelForceProgressTx: 'Transition the channel into the locked state for the next lock_period blocks. If this transaction is sent while the channel is in the closing state, it will.',
  channelGAAttachTx: 'Converts Plain Account into a Generalized Account by attaching code to it. Afterwards the new meta_tx is used to interact with the Generalized Account.',
  channelGAMetaTx: 'Wraps transaction data into a smart contract call. It wraps a "normal" transaction with auth_data for a Generalized Account.',
  payingForTx: 'Covers the fees for another user. It wraps any kind of other transaction types.',
}
